{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAeA,SAAS,IAAI,CAAE,KAAU;;IACvB,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC;IACpD,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;QACpB,OAAM;IACR,CAAC;IAED,MAAM,YAAY,GAAG,IAAI,GAAG,EAAiB;IAC7C,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YAC/B,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC,IAAI,CAAC,GAAG,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,IAAI,IAAI,GAAG,EAAE;IACb,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,YAAY,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACjB,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM;QAC5B,CAAC,CAAC;QACF,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACrC,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,gBAAgB;YAChE,CAAC,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,aAAa;gBAClD,CAAC,CAAC,oBAAoB;QAExB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAErC,IAAI,IAAI;;0CAE8B,MAAM;qBAC3B,OAAO,CAAC,GAAG;cAClB,aAAC,aAAO,CAAC,UAAU,mCAAI,OAAO,CAAC,MAAM,CAAC,0CAAE,WAAW,EAAE,mCAAI,EAAE;;;;2CAI9B,IAAI;6CACF,OAAO,CAAC,MAAM;6CACd,OAAO,CAAC,MAAM;KACtD;QACD,IAAI,OAAO,IAAI,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI;6CAC+B,OAAO,CAAC,MAAM;6CACd,OAAO,CAAC,MAAM;OACpD;QACH,CAAC;QAED,IAAI,IAAI;;;KAGP;IACH,CAAC;IACD,OAAO,CAAC,SAAS,GAAG,IAAI;AAC1B,CAAC;AAEA,MAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAO,KAAU,EAAE,EAAE;IAC1D,IAAI,CAAC,KAAK,CAAC;AACb,CAAC,EAAC;;;;;;;UEvEF;UACA;UACA;UACA;UACA","sources":["webpack://jobs-dash/./src/main.ts","webpack://jobs-dash/webpack/before-startup","webpack://jobs-dash/webpack/startup","webpack://jobs-dash/webpack/after-startup"],"sourcesContent":["type Job = {\r\n  repo: string\r\n  name: string\r\n  event: string\r\n  status: string\r\n  conclusion: string\r\n  number: number\r\n  created: string\r\n  updated: string\r\n  title: string\r\n  url: string\r\n  commit: string\r\n  author: string\r\n}\r\n\r\nfunction init (value: any) {\r\n  const element = document.getElementById('container')\r\n  if (element == null) {\r\n    return\r\n  }\r\n\r\n  const repositories = new Map<string, Job[]>()\r\n  for (const job of value.jobs) {\r\n    if (repositories.has(job.repo)) {\r\n      repositories.get(job.repo)!.push(job)\r\n    } else {\r\n      repositories.set(job.repo, [job])\r\n    }\r\n  }\r\n\r\n  let html = ''\r\n  for (const [repo, jobs] of repositories) {\r\n    jobs.sort((a, b) => {\r\n      return a.number - b.number\r\n    })\r\n    const lastJob = jobs[jobs.length - 1]\r\n    const status = lastJob.conclusion === 'success' ? 'status-success'\r\n      : lastJob.conclusion === 'failure' ? 'status-fail'\r\n      : 'status-in-progress'\r\n\r\n    const prevJob = jobs[jobs.length - 2]\r\n\r\n    html += `\r\n      <div class=\"shadow card m-2\" style=\"width: 18rem;\">\r\n        <div class=\"card-img-top status ${status}\">\r\n          <a href=\"${lastJob.url}\">\r\n            ${(lastJob.conclusion ?? lastJob.status)?.toUpperCase() ?? ''}\r\n          </a>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">&#9673; ${repo}</h5>\r\n          <p class=\"card-text author-text\">${lastJob.author}</p>\r\n          <p class=\"card-text commit-text\">${lastJob.commit}</p>\r\n    `\r\n    if (prevJob != null) {\r\n      html += `\r\n          <p class=\"card-text author-text\">${prevJob.author}</p>\r\n          <p class=\"card-text commit-text\">${prevJob.commit}</p>\r\n      `\r\n    }\r\n\r\n    html += `\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n  element.innerHTML = html\r\n}\r\n\r\n(window as any).electron.onRenderValue(async (value: any) => {\r\n  init(value)\r\n})\r\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[0]();\n",""],"names":[],"sourceRoot":""}